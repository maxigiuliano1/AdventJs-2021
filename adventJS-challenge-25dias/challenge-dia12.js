/**
 * En el taller de Santa üéÖ se est√°n preparando los trineos de motor el√©ctrico para poder hacer la ruta perfecta para dejar los regalos.
 * La ruta empieza en el punto 0 y de ah√≠ va hacia la derecha en l√≠nea recta.
 * El Keanu Relfes üßù nos ha preparado una lista de obst√°culos a evitar. 
 * El problema es que nos ha dado la lista de posiciones de los obst√°culos desordenada... üòÖ 
 * aunque al menos nunca la posici√≥n 0 puede tener un obst√°culo.
 * Encima, el trineo s√≥lo se puede configurar para saltar un n√∫mero fijo de posiciones... üò±
 * 
 * Necesitamos una funci√≥n que nos diga la longitud m√≠nima del salto del trineo para ir evitando todos los obst√°culos en la ruta.

const obstacles = [5, 3, 6, 7, 9]
getMinJump(obstacles) // -> 4

// S es salto, X es obst√°culo
/* As√≠ quedar√≠a la representaci√≥n:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
.  .  .  X  .  X  X  X  .  X  . 
S-----------S-----------S-------


const obstacles = [2, 4, 6, 8, 10]
getMinJump(obstacles) // -> 7

/* As√≠ quedar√≠a la representaci√≥n:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
.  .  X  .  X  .  X  .  X  .  X 
S--------------------S---------

// Longitudes de salto:
// 1 caer√≠a en el 2
// 2 caer√≠a en el 2
// 3 caer√≠a en el 6
// 4 caer√≠a en el 4
// 5 caer√≠a en el 10
// 6 caer√≠a en el 6
// 7 es el ideal!!! ‚úÖ

getMinJump([1, 2, 3, 5]) // -> 4
getMinJump([3, 7, 5]) // -> 2
getMinJump([9, 5, 1]) // -> 2

 * La dificultad del reto est√° en pensar que s√≥lo podemos configurar el salto del trineo una vez 
 * y que buscamos el salto m√≠nimo que nos servir√≠a para sortear todos los obstaculos.
 */

function getMinJump(obstacles) {
    obstacles.sort()
    let bandera = false
    let minJump = 0
     for(let i = 1; i <= 10; i++){
      let result = 0
      minJump = i
      for(let j = 1; j <= obstacles.length; j++){
        result += minJump
        if(obstacles.includes(result)){
          bandera = false
          break
        }else{
          bandera = true
        }
      }
      if(bandera == true) break
    }
    return minJump
  }
  
  console.log(getMinJump([2, 4, 6, 8, 10]))
  
  console.log(getMinJump([3, 7, 5]))
  
  console.log(getMinJump([1, 2, 3, 5]))